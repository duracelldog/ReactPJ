{"ast":null,"code":"if(window.ReactNativeWebView){(function(){var promiseChain=Promise.resolve();var init=function init(){/**\n             * javascript => react-native\n             * javascript에서 react-native에 메세지를 보낸다.\n             */window.webViewBridge={goBack:function goBack(){window.ReactNativeWebView.postMessage(JSON.stringify({targetFunc:'goBack',data:{}}));},send:function send(targetFunc,data){var msgObj={targetFunc:targetFunc,data:data||{}};var msg=JSON.stringify(msgObj);promiseChain=promiseChain.then(function(){return new Promise(function(resolve,reject){console.log(\"react native에 메세지를 보냄 \"+msgObj.targetFunc);window.ReactNativeWebView.postMessage(msg);resolve();});}).catch(function(e){console.error('메세지 실패 '+e.message);});}};/**\n             * react-native => javascript\n             * react native에서 화면에 결과를 넘겨준다.\n             */window.addEventListener('message',function(e){console.log(\"react native에서 메세지를 받음\",JSON.parse(e.data));});};init();})();// 웹뷰 => 네이티브 (데이터 이동)\n// var estimatedLoadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;\n// estimatedLoadTime = estimatedLoadTime * -1;\n// estimatedLoadTime = parseInt((estimatedLoadTime/1000)%60)*100;\n// var estimatedLoadTimeObject = {\n//     estimatedLoadTime: estimatedLoadTime\n// }\n// window.ReactNativeWebView.postMessage(JSON.stringify(estimatedLoadTimeObject));\n// $('#header').on('click', function(){\n//     var testMsg = {\n//         targetFunc: 'sbgFunc',\n//         data: {\n//             sbg: '천재다'\n//         }\n//     }\n//     console.log('ReactNativeWebView 실행됨');\n//     window.ReactNativeWebView.postMessage(JSON.stringify(testMsg));\n// });\n// // 네이티브 => 웹뷰 (데이터 이동)\n// window.addEventListener('message', function(e){\n//     // $('#header').html(JSON.parse(e.data));\n//     var msgValue = JSON.parse(e.data);\n//     if(msgValue.command){\n//         console.log('ticker 메시지', msgValue);\n//     }\n//     if(msgValue.targetFunc){\n//         console.log(\"react native에서 메세지를 받음\", msgValue);\n//         $('#header').html(e);\n//     }\n// });\n}","map":{"version":3,"sources":["/Users/beomgeunshin/Desktop/TOY_PROJECT/com.goowoo.www/ReactPJ/src/utils/webviewBridge.js"],"names":["window","ReactNativeWebView","promiseChain","Promise","resolve","init","webViewBridge","goBack","postMessage","JSON","stringify","targetFunc","data","send","msgObj","msg","then","reject","console","log","catch","e","error","message","addEventListener","parse"],"mappings":"AAAA,GAAGA,MAAM,CAACC,kBAAV,CAA6B,CACxB,WAAU,CACP,GAAIC,CAAAA,YAAY,CAAGC,OAAO,CAACC,OAAR,EAAnB,CACA,GAAIC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAW,CAElB;;;eAIAL,MAAM,CAACM,aAAP,CAAuB,CAEnBC,MAAM,CAAE,iBAAU,CACdP,MAAM,CAACC,kBAAP,CAA0BO,WAA1B,CAAsCC,IAAI,CAACC,SAAL,CAAe,CACjDC,UAAU,CAAE,QADqC,CAEjDC,IAAI,CAAE,EAF2C,CAAf,CAAtC,EAIH,CAPkB,CASnBC,IAAI,CAAE,cAASF,UAAT,CAAqBC,IAArB,CAA0B,CAC5B,GAAIE,CAAAA,MAAM,CAAG,CACTH,UAAU,CAAEA,UADH,CAETC,IAAI,CAAEA,IAAI,EAAI,EAFL,CAAb,CAKA,GAAIG,CAAAA,GAAG,CAAGN,IAAI,CAACC,SAAL,CAAeI,MAAf,CAAV,CAEAZ,YAAY,CAAGA,YAAY,CAACc,IAAb,CAAkB,UAAY,CACzC,MAAO,IAAIb,CAAAA,OAAJ,CAAY,SAAUC,OAAV,CAAmBa,MAAnB,CAA2B,CAC1CC,OAAO,CAACC,GAAR,CAAY,yBAA2BL,MAAM,CAACH,UAA9C,EACAX,MAAM,CAACC,kBAAP,CAA0BO,WAA1B,CAAsCO,GAAtC,EACAX,OAAO,GACV,CAJM,CAAP,CAKH,CANc,EAMZgB,KANY,CAMN,SAAUC,CAAV,CAAa,CAClBH,OAAO,CAACI,KAAR,CAAc,UAAYD,CAAC,CAACE,OAA5B,EACH,CARc,CAAf,CASH,CA1BkB,CAAvB,CA6BA;;;eAIAvB,MAAM,CAACwB,gBAAP,CAAwB,SAAxB,CAAmC,SAASH,CAAT,CAAW,CAC1CH,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCV,IAAI,CAACgB,KAAL,CAAWJ,CAAC,CAACT,IAAb,CAAtC,EACH,CAFD,EAGH,CA1CD,CA2CAP,IAAI,GACP,CA9CA,GAAD,CAiDF;AAGE;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","sourcesContent":["if(window.ReactNativeWebView){\n    (function(){\n        var promiseChain = Promise.resolve();\n        var init = function (){\n\n            /**\n             * javascript => react-native\n             * javascript에서 react-native에 메세지를 보낸다.\n             */\n            window.webViewBridge = {\n\n                goBack: function(){\n                    window.ReactNativeWebView.postMessage(JSON.stringify({\n                        targetFunc: 'goBack',\n                        data: {}\n                    }));\n                },\n\n                send: function(targetFunc, data){\n                    var msgObj = {\n                        targetFunc: targetFunc,\n                        data: data || {}\n                    };\n\n                    var msg = JSON.stringify(msgObj);\n\n                    promiseChain = promiseChain.then(function () {\n                        return new Promise(function (resolve, reject) {\n                            console.log(\"react native에 메세지를 보냄 \" + msgObj.targetFunc);\n                            window.ReactNativeWebView.postMessage(msg);\n                            resolve();\n                        })\n                    }).catch(function (e) {\n                        console.error('메세지 실패 ' + e.message);\n                    });\n                }\n            };\n\n            /**\n             * react-native => javascript\n             * react native에서 화면에 결과를 넘겨준다.\n             */\n            window.addEventListener('message', function(e){\n                console.log(\"react native에서 메세지를 받음\", JSON.parse(e.data));\n            });\n        }\n        init();\n    }());\n\n\n  // 웹뷰 => 네이티브 (데이터 이동)\n\n\n    // var estimatedLoadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;\n    // estimatedLoadTime = estimatedLoadTime * -1;\n    // estimatedLoadTime = parseInt((estimatedLoadTime/1000)%60)*100;\n\n    // var estimatedLoadTimeObject = {\n    //     estimatedLoadTime: estimatedLoadTime\n    // }\n\n    // window.ReactNativeWebView.postMessage(JSON.stringify(estimatedLoadTimeObject));\n\n\n    // $('#header').on('click', function(){\n    //     var testMsg = {\n    //         targetFunc: 'sbgFunc',\n    //         data: {\n    //             sbg: '천재다'\n    //         }\n    //     }\n    //     console.log('ReactNativeWebView 실행됨');\n        \n    //     window.ReactNativeWebView.postMessage(JSON.stringify(testMsg));\n    // });\n    \n    // // 네이티브 => 웹뷰 (데이터 이동)\n    // window.addEventListener('message', function(e){\n    //     // $('#header').html(JSON.parse(e.data));\n    //     var msgValue = JSON.parse(e.data);\n    //     if(msgValue.command){\n    //         console.log('ticker 메시지', msgValue);\n    //     }\n    //     if(msgValue.targetFunc){\n    //         console.log(\"react native에서 메세지를 받음\", msgValue);\n    //         $('#header').html(e);\n    //     }\n    // });\n}\n"]},"metadata":{},"sourceType":"module"}